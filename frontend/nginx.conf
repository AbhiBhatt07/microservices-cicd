# frontend/nginx.conf

user nginx;                        # Run workers as non-root user
worker_processes auto;             # One worker per CPU core
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;       # Max connections per worker
    use epoll;                     # Fast I/O on Linux
    multi_accept on;               # Accept multiple new connections at once
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Access log format and location
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Performance tweaks
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        image/svg+xml;

    server {
        listen 3000;                              # Serve on port 3000
        server_name localhost;
        root /usr/share/nginx/html;               # SPA build output goes here
        index index.html index.htm;

        # Security headers (consider adding CSP/HSTS when using HTTPS)
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # SPA routing: if file/folder not found, fall back to index.html
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Long-cache static assets (safe if filenames are content-hashed)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }

        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
